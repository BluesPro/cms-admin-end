/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables.records;


import diamond.cms.server.model.jooq.tables.CIpLocation;
import diamond.cms.server.model.jooq.tables.interfaces.ICIpLocation;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CIpLocationRecord extends UpdatableRecordImpl<CIpLocationRecord> implements Record2<String, String>, ICIpLocation {

    private static final long serialVersionUID = 1938892071;

    /**
     * Setter for <code>cms.c_ip_location.ip</code>.
     */
    @Override
    public void setIp(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>cms.c_ip_location.ip</code>.
     */
    @NotNull
    @Size(max = 20)
    @Override
    public String getIp() {
        return (String) get(0);
    }

    /**
     * Setter for <code>cms.c_ip_location.location</code>.
     */
    @Override
    public void setLocation(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cms.c_ip_location.location</code>.
     */
    @Size(max = 45)
    @Override
    public String getLocation() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return CIpLocation.C_IP_LOCATION.IP;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CIpLocation.C_IP_LOCATION.LOCATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getIp();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getLocation();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CIpLocationRecord value1(String value) {
        setIp(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CIpLocationRecord value2(String value) {
        setLocation(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CIpLocationRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ICIpLocation from) {
        setIp(from.getIp());
        setLocation(from.getLocation());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ICIpLocation> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CIpLocationRecord
     */
    public CIpLocationRecord() {
        super(CIpLocation.C_IP_LOCATION);
    }

    /**
     * Create a detached, initialised CIpLocationRecord
     */
    public CIpLocationRecord(String ip, String location) {
        super(CIpLocation.C_IP_LOCATION);

        set(0, ip);
        set(1, location);
    }
}
