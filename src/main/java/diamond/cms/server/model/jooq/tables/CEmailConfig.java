/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables;


import diamond.cms.server.model.jooq.Cms;
import diamond.cms.server.model.jooq.Keys;
import diamond.cms.server.model.jooq.tables.records.CEmailConfigRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CEmailConfig extends TableImpl<CEmailConfigRecord> {

    private static final long serialVersionUID = 642971639;

    /**
     * The reference instance of <code>cms.c_email_config</code>
     */
    public static final CEmailConfig C_EMAIL_CONFIG = new CEmailConfig();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CEmailConfigRecord> getRecordType() {
        return CEmailConfigRecord.class;
    }

    /**
     * The column <code>cms.c_email_config.id</code>.
     */
    public final TableField<CEmailConfigRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>cms.c_email_config.smtp_host</code>.
     */
    public final TableField<CEmailConfigRecord, String> SMTP_HOST = createField("smtp_host", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>cms.c_email_config.smtp_port</code>.
     */
    public final TableField<CEmailConfigRecord, Integer> SMTP_PORT = createField("smtp_port", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>cms.c_email_config.ssl_enable</code>. 1: 启用
0: 禁用
     */
    public final TableField<CEmailConfigRecord, Boolean> SSL_ENABLE = createField("ssl_enable", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'1'", org.jooq.impl.SQLDataType.BIT)), this, "1: 启用\n0: 禁用");

    /**
     * The column <code>cms.c_email_config.email_account</code>.
     */
    public final TableField<CEmailConfigRecord, String> EMAIL_ACCOUNT = createField("email_account", org.jooq.impl.SQLDataType.VARCHAR.length(60).nullable(false), this, "");

    /**
     * The column <code>cms.c_email_config.email_password</code>.
     */
    public final TableField<CEmailConfigRecord, String> EMAIL_PASSWORD = createField("email_password", org.jooq.impl.SQLDataType.VARCHAR.length(60).nullable(false), this, "");

    /**
     * The column <code>cms.c_email_config.enable</code>. 0: 禁用
1: 启用
是否启用配置
     */
    public final TableField<CEmailConfigRecord, Boolean> ENABLE = createField("enable", org.jooq.impl.SQLDataType.BIT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("b'0'", org.jooq.impl.SQLDataType.BIT)), this, "0: 禁用\n1: 启用\n是否启用配置");

    /**
     * The column <code>cms.c_email_config.create_time</code>.
     */
    public final TableField<CEmailConfigRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>cms.c_email_config</code> table reference
     */
    public CEmailConfig() {
        this("c_email_config", null);
    }

    /**
     * Create an aliased <code>cms.c_email_config</code> table reference
     */
    public CEmailConfig(String alias) {
        this(alias, C_EMAIL_CONFIG);
    }

    private CEmailConfig(String alias, Table<CEmailConfigRecord> aliased) {
        this(alias, aliased, null);
    }

    private CEmailConfig(String alias, Table<CEmailConfigRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Cms.CMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CEmailConfigRecord> getPrimaryKey() {
        return Keys.KEY_C_EMAIL_CONFIG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CEmailConfigRecord>> getKeys() {
        return Arrays.<UniqueKey<CEmailConfigRecord>>asList(Keys.KEY_C_EMAIL_CONFIG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CEmailConfig as(String alias) {
        return new CEmailConfig(alias, this);
    }

    /**
     * Rename this table
     */
    public CEmailConfig rename(String name) {
        return new CEmailConfig(name, null);
    }
}
