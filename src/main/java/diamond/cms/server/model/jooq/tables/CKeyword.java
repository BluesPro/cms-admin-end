/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables;


import diamond.cms.server.model.jooq.Cms;
import diamond.cms.server.model.jooq.Keys;
import diamond.cms.server.model.jooq.tables.records.CKeywordRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CKeyword extends TableImpl<CKeywordRecord> {

    private static final long serialVersionUID = 2082266629;

    /**
     * The reference instance of <code>cms.c_keyword</code>
     */
    public static final CKeyword C_KEYWORD = new CKeyword();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CKeywordRecord> getRecordType() {
        return CKeywordRecord.class;
    }

    /**
     * The column <code>cms.c_keyword.id</code>.
     */
    public final TableField<CKeywordRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>cms.c_keyword.keyword</code>.
     */
    public final TableField<CKeywordRecord, String> KEYWORD = createField("keyword", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>cms.c_keyword.ref_number</code>.
     */
    public final TableField<CKeywordRecord, Integer> REF_NUMBER = createField("ref_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>cms.c_keyword.full_pinyin</code>.
     */
    public final TableField<CKeywordRecord, String> FULL_PINYIN = createField("full_pinyin", org.jooq.impl.SQLDataType.VARCHAR.length(300).nullable(false), this, "");

    /**
     * The column <code>cms.c_keyword.simple_pinyin</code>.
     */
    public final TableField<CKeywordRecord, String> SIMPLE_PINYIN = createField("simple_pinyin", org.jooq.impl.SQLDataType.VARCHAR.length(80).nullable(false), this, "");

    /**
     * The column <code>cms.c_keyword.heat_number</code>.
     */
    public final TableField<CKeywordRecord, Integer> HEAT_NUMBER = createField("heat_number", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * Create a <code>cms.c_keyword</code> table reference
     */
    public CKeyword() {
        this("c_keyword", null);
    }

    /**
     * Create an aliased <code>cms.c_keyword</code> table reference
     */
    public CKeyword(String alias) {
        this(alias, C_KEYWORD);
    }

    private CKeyword(String alias, Table<CKeywordRecord> aliased) {
        this(alias, aliased, null);
    }

    private CKeyword(String alias, Table<CKeywordRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Cms.CMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CKeywordRecord> getPrimaryKey() {
        return Keys.KEY_C_KEYWORD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CKeywordRecord>> getKeys() {
        return Arrays.<UniqueKey<CKeywordRecord>>asList(Keys.KEY_C_KEYWORD_PRIMARY, Keys.KEY_C_KEYWORD_KEYWORD_UNIQUE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CKeyword as(String alias) {
        return new CKeyword(alias, this);
    }

    /**
     * Rename this table
     */
    public CKeyword rename(String name) {
        return new CKeyword(name, null);
    }
}
