/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables.pojos;


import diamond.cms.server.model.jooq.tables.interfaces.ICIpLocation;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CIpLocationPojo implements ICIpLocation {

    private static final long serialVersionUID = -794218227;

    private String ip;
    private String location;

    public CIpLocationPojo() {}

    public CIpLocationPojo(CIpLocationPojo value) {
        this.ip = value.ip;
        this.location = value.location;
    }

    public CIpLocationPojo(
        String ip,
        String location
    ) {
        this.ip = ip;
        this.location = location;
    }

    @NotNull
    @Size(max = 20)
    @Override
    public String getIp() {
        return this.ip;
    }

    @Override
    public void setIp(String ip) {
        this.ip = ip;
    }

    @Size(max = 45)
    @Override
    public String getLocation() {
        return this.location;
    }

    @Override
    public void setLocation(String location) {
        this.location = location;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("CIpLocationPojo (");

        sb.append(ip);
        sb.append(", ").append(location);

        sb.append(")");
        return sb.toString();
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ICIpLocation from) {
        setIp(from.getIp());
        setLocation(from.getLocation());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ICIpLocation> E into(E into) {
        into.from(this);
        return into;
    }
}
