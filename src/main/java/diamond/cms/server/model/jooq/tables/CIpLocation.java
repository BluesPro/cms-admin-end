/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables;


import diamond.cms.server.model.jooq.Cms;
import diamond.cms.server.model.jooq.Keys;
import diamond.cms.server.model.jooq.tables.records.CIpLocationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CIpLocation extends TableImpl<CIpLocationRecord> {

    private static final long serialVersionUID = 150108912;

    /**
     * The reference instance of <code>cms.c_ip_location</code>
     */
    public static final CIpLocation C_IP_LOCATION = new CIpLocation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CIpLocationRecord> getRecordType() {
        return CIpLocationRecord.class;
    }

    /**
     * The column <code>cms.c_ip_location.ip</code>.
     */
    public final TableField<CIpLocationRecord, String> IP = createField("ip", org.jooq.impl.SQLDataType.VARCHAR.length(20).nullable(false), this, "");

    /**
     * The column <code>cms.c_ip_location.location</code>.
     */
    public final TableField<CIpLocationRecord, String> LOCATION = createField("location", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

    /**
     * Create a <code>cms.c_ip_location</code> table reference
     */
    public CIpLocation() {
        this("c_ip_location", null);
    }

    /**
     * Create an aliased <code>cms.c_ip_location</code> table reference
     */
    public CIpLocation(String alias) {
        this(alias, C_IP_LOCATION);
    }

    private CIpLocation(String alias, Table<CIpLocationRecord> aliased) {
        this(alias, aliased, null);
    }

    private CIpLocation(String alias, Table<CIpLocationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Cms.CMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CIpLocationRecord> getPrimaryKey() {
        return Keys.KEY_C_IP_LOCATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CIpLocationRecord>> getKeys() {
        return Arrays.<UniqueKey<CIpLocationRecord>>asList(Keys.KEY_C_IP_LOCATION_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CIpLocation as(String alias) {
        return new CIpLocation(alias, this);
    }

    /**
     * Rename this table
     */
    public CIpLocation rename(String name) {
        return new CIpLocation(name, null);
    }
}
