/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables;


import diamond.cms.server.model.jooq.Cms;
import diamond.cms.server.model.jooq.Keys;
import diamond.cms.server.model.jooq.tables.records.CCatalogRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CCatalog extends TableImpl<CCatalogRecord> {

    private static final long serialVersionUID = -1833410260;

    /**
     * The reference instance of <code>cms.c_catalog</code>
     */
    public static final CCatalog C_CATALOG = new CCatalog();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CCatalogRecord> getRecordType() {
        return CCatalogRecord.class;
    }

    /**
     * The column <code>cms.c_catalog.id</code>.
     */
    public final TableField<CCatalogRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>cms.c_catalog.name</code>.
     */
    public final TableField<CCatalogRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(30).nullable(false), this, "");

    /**
     * The column <code>cms.c_catalog.sort</code>.
     */
    public final TableField<CCatalogRecord, Integer> SORT = createField("sort", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    /**
     * The column <code>cms.c_catalog.description</code>.
     */
    public final TableField<CCatalogRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR.length(500), this, "");

    /**
     * The column <code>cms.c_catalog.create_time</code>.
     */
    public final TableField<CCatalogRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * The column <code>cms.c_catalog.update_time</code>.
     */
    public final TableField<CCatalogRecord, Timestamp> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>cms.c_catalog</code> table reference
     */
    public CCatalog() {
        this("c_catalog", null);
    }

    /**
     * Create an aliased <code>cms.c_catalog</code> table reference
     */
    public CCatalog(String alias) {
        this(alias, C_CATALOG);
    }

    private CCatalog(String alias, Table<CCatalogRecord> aliased) {
        this(alias, aliased, null);
    }

    private CCatalog(String alias, Table<CCatalogRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Cms.CMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CCatalogRecord> getPrimaryKey() {
        return Keys.KEY_C_CATALOG_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CCatalogRecord>> getKeys() {
        return Arrays.<UniqueKey<CCatalogRecord>>asList(Keys.KEY_C_CATALOG_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CCatalog as(String alias) {
        return new CCatalog(alias, this);
    }

    /**
     * Rename this table
     */
    public CCatalog rename(String name) {
        return new CCatalog(name, null);
    }
}
