/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables.records;


import diamond.cms.server.model.jooq.tables.CCatalog;
import diamond.cms.server.model.jooq.tables.interfaces.ICCatalog;

import java.sql.Timestamp;

import javax.annotation.Generated;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CCatalogRecord extends UpdatableRecordImpl<CCatalogRecord> implements Record6<String, String, Integer, String, Timestamp, Timestamp>, ICCatalog {

    private static final long serialVersionUID = -620042315;

    /**
     * Setter for <code>cms.c_catalog.id</code>.
     */
    @Override
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>cms.c_catalog.id</code>.
     */
    @NotNull
    @Size(max = 40)
    @Override
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>cms.c_catalog.name</code>.
     */
    @Override
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>cms.c_catalog.name</code>.
     */
    @NotNull
    @Size(max = 30)
    @Override
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>cms.c_catalog.sort</code>.
     */
    @Override
    public void setSort(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>cms.c_catalog.sort</code>.
     */
    @Override
    public Integer getSort() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>cms.c_catalog.description</code>.
     */
    @Override
    public void setDescription(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>cms.c_catalog.description</code>.
     */
    @Size(max = 500)
    @Override
    public String getDescription() {
        return (String) get(3);
    }

    /**
     * Setter for <code>cms.c_catalog.create_time</code>.
     */
    @Override
    public void setCreateTime(Timestamp value) {
        set(4, value);
    }

    /**
     * Getter for <code>cms.c_catalog.create_time</code>.
     */
    @Override
    public Timestamp getCreateTime() {
        return (Timestamp) get(4);
    }

    /**
     * Setter for <code>cms.c_catalog.update_time</code>.
     */
    @Override
    public void setUpdateTime(Timestamp value) {
        set(5, value);
    }

    /**
     * Getter for <code>cms.c_catalog.update_time</code>.
     */
    @Override
    public Timestamp getUpdateTime() {
        return (Timestamp) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, Integer, String, Timestamp, Timestamp> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row6<String, String, Integer, String, Timestamp, Timestamp> valuesRow() {
        return (Row6) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return CCatalog.C_CATALOG.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return CCatalog.C_CATALOG.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return CCatalog.C_CATALOG.SORT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return CCatalog.C_CATALOG.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field5() {
        return CCatalog.C_CATALOG.CREATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Timestamp> field6() {
        return CCatalog.C_CATALOG.UPDATE_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getSort();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value5() {
        return getCreateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Timestamp value6() {
        return getUpdateTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CCatalogRecord value1(String value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CCatalogRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CCatalogRecord value3(Integer value) {
        setSort(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CCatalogRecord value4(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CCatalogRecord value5(Timestamp value) {
        setCreateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CCatalogRecord value6(Timestamp value) {
        setUpdateTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CCatalogRecord values(String value1, String value2, Integer value3, String value4, Timestamp value5, Timestamp value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // FROM and INTO
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public void from(ICCatalog from) {
        setId(from.getId());
        setName(from.getName());
        setSort(from.getSort());
        setDescription(from.getDescription());
        setCreateTime(from.getCreateTime());
        setUpdateTime(from.getUpdateTime());
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public <E extends ICCatalog> E into(E into) {
        into.from(this);
        return into;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CCatalogRecord
     */
    public CCatalogRecord() {
        super(CCatalog.C_CATALOG);
    }

    /**
     * Create a detached, initialised CCatalogRecord
     */
    public CCatalogRecord(String id, String name, Integer sort, String description, Timestamp createTime, Timestamp updateTime) {
        super(CCatalog.C_CATALOG);

        set(0, id);
        set(1, name);
        set(2, sort);
        set(3, description);
        set(4, createTime);
        set(5, updateTime);
    }
}
