/**
 * This class is generated by jOOQ
 */
package diamond.cms.server.model.jooq.tables;


import diamond.cms.server.model.jooq.Cms;
import diamond.cms.server.model.jooq.Keys;
import diamond.cms.server.model.jooq.tables.records.CEmailSendRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.6"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CEmailSend extends TableImpl<CEmailSendRecord> {

    private static final long serialVersionUID = -2130948387;

    /**
     * The reference instance of <code>cms.c_email_send</code>
     */
    public static final CEmailSend C_EMAIL_SEND = new CEmailSend();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CEmailSendRecord> getRecordType() {
        return CEmailSendRecord.class;
    }

    /**
     * The column <code>cms.c_email_send.id</code>.
     */
    public final TableField<CEmailSendRecord, String> ID = createField("id", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>cms.c_email_send.from_email</code>.
     */
    public final TableField<CEmailSendRecord, String> FROM_EMAIL = createField("from_email", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>cms.c_email_send.to_email</code>.
     */
    public final TableField<CEmailSendRecord, String> TO_EMAIL = createField("to_email", org.jooq.impl.SQLDataType.VARCHAR.length(45).nullable(false), this, "");

    /**
     * The column <code>cms.c_email_send.title</code>.
     */
    public final TableField<CEmailSendRecord, String> TITLE = createField("title", org.jooq.impl.SQLDataType.VARCHAR.length(45), this, "");

    /**
     * The column <code>cms.c_email_send.content</code>.
     */
    public final TableField<CEmailSendRecord, String> CONTENT = createField("content", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>cms.c_email_send.remark</code>.
     */
    public final TableField<CEmailSendRecord, String> REMARK = createField("remark", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>cms.c_email_send.email_config_id</code>.
     */
    public final TableField<CEmailSendRecord, String> EMAIL_CONFIG_ID = createField("email_config_id", org.jooq.impl.SQLDataType.VARCHAR.length(40).nullable(false), this, "");

    /**
     * The column <code>cms.c_email_send.create_time</code>.
     */
    public final TableField<CEmailSendRecord, Timestamp> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaultValue(org.jooq.impl.DSL.inline("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.TIMESTAMP)), this, "");

    /**
     * Create a <code>cms.c_email_send</code> table reference
     */
    public CEmailSend() {
        this("c_email_send", null);
    }

    /**
     * Create an aliased <code>cms.c_email_send</code> table reference
     */
    public CEmailSend(String alias) {
        this(alias, C_EMAIL_SEND);
    }

    private CEmailSend(String alias, Table<CEmailSendRecord> aliased) {
        this(alias, aliased, null);
    }

    private CEmailSend(String alias, Table<CEmailSendRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Cms.CMS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CEmailSendRecord> getPrimaryKey() {
        return Keys.KEY_C_EMAIL_SEND_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CEmailSendRecord>> getKeys() {
        return Arrays.<UniqueKey<CEmailSendRecord>>asList(Keys.KEY_C_EMAIL_SEND_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CEmailSend as(String alias) {
        return new CEmailSend(alias, this);
    }

    /**
     * Rename this table
     */
    public CEmailSend rename(String name) {
        return new CEmailSend(name, null);
    }
}
